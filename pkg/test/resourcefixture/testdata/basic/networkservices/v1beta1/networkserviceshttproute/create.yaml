# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networkservices.cnrm.cloud.google.com/v1beta1
kind: NetworkServicesHTTPRoute
metadata:
  labels:
    key-one: value-one
  name: networkserviceshttproute-${uniqueId}
spec:
  projectRef:
    external: "projects/${projectId}"
  location: global
  hostnames: ["foo.bar"]
  meshes:
    - name: "networkservicesmesh-${uniqueId}"
  gateways:
    - name: "networkservicesgateway-${uniqueId}"
  rules:
  - matches:
    - fullPathMatch: "/foo/bar"
      headers:
      - header: "foo-header"
        prefixMatch: "bar-value"
    action:
      destinations:
      - serviceRef:
          name: computebackendservice-${uniqueId}
      faultInjectionPolicy:
        abort:
          httpStatus: 501
          percentage: 1
        delay:
          fixedDelay: "10s"
          percentage: 2
      requestHeaderModifier:
        add:
          foo1: bar1
          baz1: qux1
        set:
          foo2: bar2
          baz2: qux2
        remove:
        - foo3
        - bar3
      requestMirrorPolicy:
        destination:
          serviceRef:
            name: computebackendservice-${uniqueId}
      responseHeaderModifier:
        add:
          foo1: bar1
          baz1: qux1
        set:
          foo2: bar2
          baz2: qux2
        remove:
        - foo3
        - bar3
      retryPolicy:
        numRetries: 3
        perTryTimeout: "5s"
        retryConditions:
        - "refused-stream"
        - "cancelled"
      timeout: "30s"
  - action:
      destinations:
      - serviceRef:
         name: computebackendservice-${uniqueId}
