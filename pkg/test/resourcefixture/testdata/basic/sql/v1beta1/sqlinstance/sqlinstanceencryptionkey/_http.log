POST https://serviceusage.googleapis.com/v1beta1/projects/${projectId}/services/sqladmin.googleapis.com:generateServiceIdentity?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "done": true,
  "name": "operations/${operationID}",
  "response": {
    "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
    "email": "service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com",
    "uniqueId": "105675750616095665192"
  }
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:setIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "policy": {
    "bindings": [
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
        ],
        "role": "roles/alloydb.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
        ],
        "role": "roles/appengine.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
        ],
        "role": "roles/artifactregistry.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
        ],
        "role": "roles/cloudbuild.builds.builder"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
        ],
        "role": "roles/cloudbuild.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
        ],
        "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
        ],
        "role": "roles/cloudkms.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
        ],
        "role": "roles/compute.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
        ],
        "role": "roles/container.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
        ],
        "role": "roles/containerregistry.ServiceAgent"
      },
      {
        "members": [
          "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
          "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
          "serviceAccount:${projectId}@appspot.gserviceaccount.com"
        ],
        "role": "roles/editor"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
        ],
        "role": "roles/firebaserules.system"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
        ],
        "role": "roles/firestore.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
        ],
        "role": "roles/gkehub.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
        ],
        "role": "roles/networkconnectivity.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
          "user:jasonvigil@google.com"
        ],
        "role": "roles/owner"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
        ],
        "role": "roles/pubsub.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
        ],
        "role": "roles/servicenetworking.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
        ],
        "role": "roles/spanner.serviceAgent"
      }
    ],
    "etag": "abcdef0123A=",
    "version": 3
  },
  "updateMask": "bindings,etag,auditConfigs"
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

404 Not Found
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "message": "KeyRing projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId} not found.",
    "status": "NOT_FOUND"
  }
}

---

POST https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings?alt=json&keyRingId=kmskeyring-${uniqueId}
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}"
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}"
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

404 Not Found
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "message": "CryptoKey projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId} not found.",
    "status": "NOT_FOUND"
  }
}

---

POST https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys?alt=json&cryptoKeyId=kmscryptokey-${uniqueId}&skipInitialVersionCreation=false
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "purpose": "ENCRYPT_DECRYPT"
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "destroyScheduledDuration": "2592000s",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}",
  "primary": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "createTime": "2024-04-01T12:34:56.123456Z",
    "generateTime": "2024-04-01T12:34:56.123456Z",
    "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1",
    "protectionLevel": "SOFTWARE",
    "state": "ENABLED"
  },
  "purpose": "ENCRYPT_DECRYPT",
  "versionTemplate": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "protectionLevel": "SOFTWARE"
  }
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "destroyScheduledDuration": "2592000s",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}",
  "primary": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "createTime": "2024-04-01T12:34:56.123456Z",
    "generateTime": "2024-04-01T12:34:56.123456Z",
    "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1",
    "protectionLevel": "SOFTWARE",
    "state": "ENABLED"
  },
  "purpose": "ENCRYPT_DECRYPT",
  "versionTemplate": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "protectionLevel": "SOFTWARE"
  }
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

404 Not Found
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "errors": [
      {
        "domain": "global",
        "message": "The resource 'projects/${projectId}/global/networks/computenetwork-${uniqueId}' was not found",
        "reason": "notFound"
      }
    ],
    "message": "The resource 'projects/${projectId}/global/networks/computenetwork-${uniqueId}' was not found"
  }
}

---

POST https://compute.googleapis.com/compute/v1/projects/${projectId}/global/networks?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "autoCreateSubnetworks": false,
  "description": "Test network",
  "name": "computenetwork-${uniqueId}",
  "networkFirewallPolicyEnforcementOrder": "AFTER_CLASSIC_FIREWALL"
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "insert",
  "progress": 0,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "RUNNING",
  "targetId": "${networkID}",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "endTime": "2024-04-01T12:34:56.123456Z",
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "insert",
  "progress": 100,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "DONE",
  "targetId": "${networkID}",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "autoCreateSubnetworks": false,
  "creationTimestamp": "2024-04-01T12:34:56.123456Z",
  "description": "Test network",
  "id": "000000000000000000000",
  "kind": "compute#network",
  "name": "computenetwork-${uniqueId}",
  "networkFirewallPolicyEnforcementOrder": "AFTER_CLASSIC_FIREWALL",
  "routingConfig": {
    "bgpBestPathSelectionMode": "LEGACY",
    "routingMode": "REGIONAL"
  },
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "selfLinkWithId": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

404 Not Found
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "errors": [
      {
        "domain": "global",
        "message": "The resource 'projects/${projectId}/global/addresses/computeaddress-${uniqueId}' was not found",
        "reason": "notFound"
      }
    ],
    "message": "The resource 'projects/${projectId}/global/addresses/computeaddress-${uniqueId}' was not found"
  }
}

---

POST https://compute.googleapis.com/compute/v1/projects/${projectId}/global/addresses?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "addressType": "INTERNAL",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "computeaddress-${uniqueId}",
  "network": "projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "prefixLength": 16,
  "purpose": "VPC_PEERING"
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "insert",
  "progress": 0,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "RUNNING",
  "targetId": "6659957269308098086",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "endTime": "2024-04-01T12:34:56.123456Z",
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "insert",
  "progress": 100,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "DONE",
  "targetId": "6659957269308098086",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "address": "10.187.0.0",
  "addressType": "INTERNAL",
  "creationTimestamp": "2024-04-01T12:34:56.123456Z",
  "description": "",
  "id": "000000000000000000000",
  "kind": "compute#address",
  "labelFingerprint": "abcdef0123A=",
  "name": "computeaddress-${uniqueId}",
  "network": "https://www.googleapis.com/compute/beta/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "networkTier": "PREMIUM",
  "prefixLength": 16,
  "purpose": "VPC_PEERING",
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "status": "RESERVED"
}

---

POST https://compute.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}/setLabels?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "labelFingerprint": "abcdef0123A=",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "endTime": "2024-04-01T12:34:56.123456Z",
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "setLabels",
  "progress": 100,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "DONE",
  "targetId": "6659957269308098086",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "address": "10.187.0.0",
  "addressType": "INTERNAL",
  "creationTimestamp": "2024-04-01T12:34:56.123456Z",
  "description": "",
  "id": "000000000000000000000",
  "kind": "compute#address",
  "labelFingerprint": "abcdef0123A=",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "computeaddress-${uniqueId}",
  "network": "https://www.googleapis.com/compute/beta/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "networkTier": "PREMIUM",
  "prefixLength": 16,
  "purpose": "VPC_PEERING",
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "status": "RESERVED"
}

---

GET https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "lifecycleState": "ACTIVE",
  "name": "${projectId}",
  "parent": {
    "id": "${testFolderId}",
    "type": "organization"
  },
  "projectId": "${projectId}",
  "projectNumber": "${projectNumber}"
}

---

GET https://servicenetworking.googleapis.com/v1/services/servicenetworking.googleapis.com/connections?alt=json&network=projects%2F${projectNumber}%2Fglobal%2Fnetworks%2Fcomputenetwork-${uniqueId}&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{}

---

GET https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "lifecycleState": "ACTIVE",
  "name": "${projectId}",
  "parent": {
    "id": "${testFolderId}",
    "type": "organization"
  },
  "projectId": "${projectId}",
  "projectNumber": "${projectNumber}"
}

---

PATCH https://servicenetworking.googleapis.com/v1/services/servicenetworking.googleapis.com/connections/-?alt=json&force=true&prettyPrint=false&updateMask=reservedPeeringRanges
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "network": "projects/${projectNumber}/global/networks/computenetwork-${uniqueId}",
  "reservedPeeringRanges": [
    "computeaddress-${uniqueId}"
  ]
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "name": "operations/pssn.p24-${projectNumber}-7586e417-b24b-4354-bed9-a0d0db78ae67"
}

---

GET https://servicenetworking.googleapis.com/v1/operations/${operationID}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "done": true,
  "name": "operations/pssn.p24-${projectNumber}-7586e417-b24b-4354-bed9-a0d0db78ae67",
  "response": {
    "@type": "type.googleapis.com/google.cloud.servicenetworking.v1.Connection",
    "network": "projects/${projectNumber}/global/networks/computenetwork-${uniqueId}",
    "peering": "servicenetworking-googleapis-com",
    "reservedPeeringRanges": [
      "computeaddress-${uniqueId}"
    ]
  }
}

---

GET https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "lifecycleState": "ACTIVE",
  "name": "${projectId}",
  "parent": {
    "id": "${testFolderId}",
    "type": "organization"
  },
  "projectId": "${projectId}",
  "projectNumber": "${projectNumber}"
}

---

GET https://servicenetworking.googleapis.com/v1/services/servicenetworking.googleapis.com/connections?alt=json&network=projects%2F${projectNumber}%2Fglobal%2Fnetworks%2Fcomputenetwork-${uniqueId}&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "connections": [
    {
      "network": "projects/${projectNumber}/global/networks/computenetwork-${uniqueId}",
      "peering": "servicenetworking-googleapis-com",
      "reservedPeeringRanges": [
        "computeaddress-${uniqueId}"
      ],
      "service": "services/servicenetworking.googleapis.com"
    }
  ]
}

---

GET https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}?alt=json&prettyPrint=false
User-Agent: kcc/controller-manager

404 Not Found
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "error": {
    "code": 404,
    "errors": [
      {
        "domain": "global",
        "message": "The Cloud SQL instance does not exist.",
        "reason": "instanceDoesNotExist"
      }
    ],
    "message": "The Cloud SQL instance does not exist."
  }
}

---

POST https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: kcc/controller-manager

{
  "databaseVersion": "POSTGRES_15",
  "diskEncryptionConfiguration": {
    "kind": "sql#diskEncryptionConfiguration",
    "kmsKeyName": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}"
  },
  "name": "sqlinstance-sample-${uniqueId}",
  "region": "us-central1",
  "settings": {
    "activationPolicy": "ALWAYS",
    "availabilityType": "REGIONAL",
    "backupConfiguration": {
      "backupRetentionSettings": {
        "retainedBackups": 5
      },
      "enabled": true,
      "pointInTimeRecoveryEnabled": true,
      "startTime": "12:00",
      "transactionLogRetentionDays": 5
    },
    "dataDiskSizeGb": "100",
    "dataDiskType": "PD_SSD",
    "databaseFlags": [
      {
        "name": "cloudsql.iam_authentication",
        "value": "on"
      }
    ],
    "edition": "ENTERPRISE",
    "insightsConfig": {
      "queryInsightsEnabled": true,
      "queryPlansPerMinute": 20,
      "queryStringLength": 4500,
      "recordApplicationTags": true,
      "recordClientAddress": true
    },
    "ipConfiguration": {
      "ipv4Enabled": false,
      "privateNetwork": "projects/${projectId}/global/networks/computenetwork-${uniqueId}",
      "requireSsl": true
    },
    "locationPreference": {
      "zone": "us-central1-b"
    },
    "maintenanceWindow": {
      "day": 6,
      "hour": 2,
      "updateTrack": "stable"
    },
    "pricingPlan": "PER_USE",
    "storageAutoResize": true,
    "tier": "db-custom-8-30720",
    "userLabels": {
      "cnrm-test": "true",
      "label-one": "value-one",
      "managed-by-cnrm": "true"
    }
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "sql#operation",
  "name": "${operationID}",
  "operationType": "CREATE",
  "selfLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/operations/${operationID}",
  "status": "PENDING",
  "targetId": "sqlinstance-sample-${uniqueId}",
  "targetLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}",
  "targetProject": "${projectId}",
  "user": "user@example.com"
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "autoCreateSubnetworks": false,
  "creationTimestamp": "2024-04-01T12:34:56.123456Z",
  "description": "Test network",
  "id": "000000000000000000000",
  "kind": "compute#network",
  "name": "computenetwork-${uniqueId}",
  "networkFirewallPolicyEnforcementOrder": "AFTER_CLASSIC_FIREWALL",
  "peerings": [
    {
      "autoCreateRoutes": true,
      "exchangeSubnetRoutes": true,
      "exportCustomRoutes": false,
      "exportSubnetRoutesWithPublicIp": false,
      "importCustomRoutes": false,
      "importSubnetRoutesWithPublicIp": false,
      "name": "servicenetworking-googleapis-com",
      "network": "https://www.googleapis.com/compute/beta/projects/nc9567c6af384ebabp-tp/global/networks/servicenetworking",
      "stackType": "IPV4_ONLY",
      "state": "ACTIVE",
      "stateDetails": "[2024-08-27T18:12:05.532-07:00]: Connected."
    }
  ],
  "routingConfig": {
    "bgpBestPathSelectionMode": "LEGACY",
    "routingMode": "REGIONAL"
  },
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "selfLinkWithId": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}"
}

---

GET https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "lifecycleState": "ACTIVE",
  "name": "${projectId}",
  "parent": {
    "id": "${testFolderId}",
    "type": "organization"
  },
  "projectId": "${projectId}",
  "projectNumber": "${projectNumber}"
}

---

GET https://servicenetworking.googleapis.com/v1/services/servicenetworking.googleapis.com/connections?alt=json&network=projects%2F${projectNumber}%2Fglobal%2Fnetworks%2Fcomputenetwork-${uniqueId}&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "connections": [
    {
      "network": "projects/${projectNumber}/global/networks/computenetwork-${uniqueId}",
      "peering": "servicenetworking-googleapis-com",
      "reservedPeeringRanges": [
        "computeaddress-${uniqueId}"
      ],
      "service": "services/servicenetworking.googleapis.com"
    }
  ]
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "destroyScheduledDuration": "2592000s",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}",
  "primary": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "createTime": "2024-04-01T12:34:56.123456Z",
    "generateTime": "2024-04-01T12:34:56.123456Z",
    "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1",
    "protectionLevel": "SOFTWARE",
    "state": "ENABLED"
  },
  "purpose": "ENCRYPT_DECRYPT",
  "versionTemplate": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "protectionLevel": "SOFTWARE"
  }
}

---

GET https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/operations/${operationID}?alt=json&prettyPrint=false
User-Agent: kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "endTime": "2024-04-01T12:34:56.123456Z",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "sql#operation",
  "name": "${operationID}",
  "operationType": "CREATE",
  "selfLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "DONE",
  "targetId": "sqlinstance-sample-${uniqueId}",
  "targetLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}",
  "targetProject": "${projectId}",
  "user": "user@example.com"
}

---

GET https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}?alt=json&prettyPrint=false
User-Agent: kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "backendType": "SECOND_GEN",
  "connectionName": "${projectId}:us-central1:sqlinstance-sample-${uniqueId}",
  "createTime": "2024-04-01T12:34:56.123456Z",
  "databaseInstalledVersion": "POSTGRES_15_7",
  "databaseVersion": "POSTGRES_15",
  "diskEncryptionConfiguration": {
    "kind": "sql#diskEncryptionConfiguration",
    "kmsKeyName": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}"
  },
  "diskEncryptionStatus": {
    "kind": "sql#diskEncryptionStatus",
    "kmsKeyVersionName": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1"
  },
  "etag": "abcdef0123A=",
  "failoverReplica": {
    "available": true
  },
  "gceZone": "us-central1-a",
  "geminiConfig": {
    "activeQueryEnabled": false,
    "entitled": false,
    "googleVacuumMgmtEnabled": false,
    "indexAdvisorEnabled": false,
    "oomSessionCancelEnabled": false
  },
  "instanceType": "CLOUD_SQL_INSTANCE",
  "ipAddresses": [
    {
      "ipAddress": "10.1.2.3",
      "type": "PRIVATE"
    }
  ],
  "kind": "sql#instance",
  "maintenanceVersion": "POSTGRES_15_7.R20240514.00_12",
  "name": "sqlinstance-sample-${uniqueId}",
  "project": "${projectId}",
  "region": "us-central1",
  "satisfiesPzi": true,
  "secondaryGceZone": "us-central1-a",
  "selfLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}",
  "serverCaCert": {
    "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",
    "certSerialNumber": "0",
    "commonName": "common-name",
    "createTime": "2024-04-01T12:34:56.123456Z",
    "expirationTime": "2024-04-01T12:34:56.123456Z",
    "instance": "sqlinstance-sample-${uniqueId}",
    "kind": "sql#sslCert",
    "sha1Fingerprint": "12345678"
  },
  "serviceAccountEmailAddress": "p${projectNumber}-abcdef@gcp-sa-cloud-sql.iam.gserviceaccount.com",
  "settings": {
    "activationPolicy": "ALWAYS",
    "authorizedGaeApplications": [],
    "availabilityType": "REGIONAL",
    "backupConfiguration": {
      "backupRetentionSettings": {
        "retainedBackups": 5,
        "retentionUnit": "COUNT"
      },
      "enabled": true,
      "kind": "sql#backupConfiguration",
      "pointInTimeRecoveryEnabled": true,
      "replicationLogArchivingEnabled": true,
      "startTime": "12:00",
      "transactionLogRetentionDays": 5,
      "transactionalLogStorageState": "CLOUD_STORAGE"
    },
    "connectorEnforcement": "NOT_REQUIRED",
    "dataDiskSizeGb": "100",
    "dataDiskType": "PD_SSD",
    "databaseFlags": [
      {
        "name": "cloudsql.iam_authentication",
        "value": "on"
      }
    ],
    "deletionProtectionEnabled": false,
    "edition": "ENTERPRISE",
    "insightsConfig": {
      "queryInsightsEnabled": true,
      "queryPlansPerMinute": 20,
      "queryStringLength": 4500,
      "recordApplicationTags": true,
      "recordClientAddress": true
    },
    "ipConfiguration": {
      "authorizedNetworks": [],
      "ipv4Enabled": false,
      "privateNetwork": "projects/${projectId}/global/networks/computenetwork-${uniqueId}",
      "requireSsl": true,
      "sslMode": "TRUSTED_CLIENT_CERTIFICATE_REQUIRED"
    },
    "kind": "sql#settings",
    "locationPreference": {
      "kind": "sql#locationPreference",
      "zone": "us-central1-b"
    },
    "maintenanceWindow": {
      "day": 6,
      "hour": 2,
      "kind": "sql#maintenanceWindow",
      "updateTrack": "stable"
    },
    "pricingPlan": "PER_USE",
    "replicationType": "SYNCHRONOUS",
    "settingsVersion": "123",
    "storageAutoResize": true,
    "storageAutoResizeLimit": "0",
    "tier": "db-custom-8-30720",
    "userLabels": {
      "cnrm-test": "true",
      "label-one": "value-one",
      "managed-by-cnrm": "true"
    }
  },
  "sqlNetworkArchitecture": "NEW_NETWORK_ARCHITECTURE",
  "state": "RUNNABLE",
  "upgradableDatabaseVersions": [
    {
      "displayName": "PostgreSQL 16",
      "majorVersion": "POSTGRES_16",
      "name": "POSTGRES_16"
    }
  ]
}

---

GET https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}/users?alt=json&prettyPrint=false
User-Agent: kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "items": [
    {
      "etag": "abcdef0123A=",
      "host": "",
      "instance": "sqlinstance-sample-${uniqueId}",
      "kind": "sql#user",
      "name": "postgres",
      "project": "${projectId}"
    }
  ],
  "kind": "sql#usersList"
}

---

GET https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}?alt=json&prettyPrint=false
User-Agent: kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "backendType": "SECOND_GEN",
  "connectionName": "${projectId}:us-central1:sqlinstance-sample-${uniqueId}",
  "createTime": "2024-04-01T12:34:56.123456Z",
  "databaseInstalledVersion": "POSTGRES_15_7",
  "databaseVersion": "POSTGRES_15",
  "diskEncryptionConfiguration": {
    "kind": "sql#diskEncryptionConfiguration",
    "kmsKeyName": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}"
  },
  "diskEncryptionStatus": {
    "kind": "sql#diskEncryptionStatus",
    "kmsKeyVersionName": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1"
  },
  "etag": "abcdef0123A=",
  "failoverReplica": {
    "available": true
  },
  "gceZone": "us-central1-a",
  "geminiConfig": {
    "activeQueryEnabled": false,
    "entitled": false,
    "googleVacuumMgmtEnabled": false,
    "indexAdvisorEnabled": false,
    "oomSessionCancelEnabled": false
  },
  "instanceType": "CLOUD_SQL_INSTANCE",
  "ipAddresses": [
    {
      "ipAddress": "10.1.2.3",
      "type": "PRIVATE"
    }
  ],
  "kind": "sql#instance",
  "maintenanceVersion": "POSTGRES_15_7.R20240514.00_12",
  "name": "sqlinstance-sample-${uniqueId}",
  "project": "${projectId}",
  "region": "us-central1",
  "satisfiesPzi": true,
  "secondaryGceZone": "us-central1-a",
  "selfLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}",
  "serverCaCert": {
    "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",
    "certSerialNumber": "0",
    "commonName": "common-name",
    "createTime": "2024-04-01T12:34:56.123456Z",
    "expirationTime": "2024-04-01T12:34:56.123456Z",
    "instance": "sqlinstance-sample-${uniqueId}",
    "kind": "sql#sslCert",
    "sha1Fingerprint": "12345678"
  },
  "serviceAccountEmailAddress": "p${projectNumber}-abcdef@gcp-sa-cloud-sql.iam.gserviceaccount.com",
  "settings": {
    "activationPolicy": "ALWAYS",
    "authorizedGaeApplications": [],
    "availabilityType": "REGIONAL",
    "backupConfiguration": {
      "backupRetentionSettings": {
        "retainedBackups": 5,
        "retentionUnit": "COUNT"
      },
      "enabled": true,
      "kind": "sql#backupConfiguration",
      "pointInTimeRecoveryEnabled": true,
      "replicationLogArchivingEnabled": true,
      "startTime": "12:00",
      "transactionLogRetentionDays": 5,
      "transactionalLogStorageState": "CLOUD_STORAGE"
    },
    "connectorEnforcement": "NOT_REQUIRED",
    "dataDiskSizeGb": "100",
    "dataDiskType": "PD_SSD",
    "databaseFlags": [
      {
        "name": "cloudsql.iam_authentication",
        "value": "on"
      }
    ],
    "deletionProtectionEnabled": false,
    "edition": "ENTERPRISE",
    "insightsConfig": {
      "queryInsightsEnabled": true,
      "queryPlansPerMinute": 20,
      "queryStringLength": 4500,
      "recordApplicationTags": true,
      "recordClientAddress": true
    },
    "ipConfiguration": {
      "authorizedNetworks": [],
      "ipv4Enabled": false,
      "privateNetwork": "projects/${projectId}/global/networks/computenetwork-${uniqueId}",
      "requireSsl": true,
      "sslMode": "TRUSTED_CLIENT_CERTIFICATE_REQUIRED"
    },
    "kind": "sql#settings",
    "locationPreference": {
      "kind": "sql#locationPreference",
      "zone": "us-central1-b"
    },
    "maintenanceWindow": {
      "day": 6,
      "hour": 2,
      "kind": "sql#maintenanceWindow",
      "updateTrack": "stable"
    },
    "pricingPlan": "PER_USE",
    "replicationType": "SYNCHRONOUS",
    "settingsVersion": "123",
    "storageAutoResize": true,
    "storageAutoResizeLimit": "0",
    "tier": "db-custom-8-30720",
    "userLabels": {
      "cnrm-test": "true",
      "label-one": "value-one",
      "managed-by-cnrm": "true"
    }
  },
  "sqlNetworkArchitecture": "NEW_NETWORK_ARCHITECTURE",
  "state": "RUNNABLE",
  "upgradableDatabaseVersions": [
    {
      "displayName": "PostgreSQL 16",
      "majorVersion": "POSTGRES_16",
      "name": "POSTGRES_16"
    }
  ]
}

---

DELETE https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}?alt=json&prettyPrint=false
User-Agent: kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "sql#operation",
  "name": "${operationID}",
  "operationType": "DELETE",
  "selfLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/operations/${operationID}",
  "status": "PENDING",
  "targetId": "sqlinstance-sample-${uniqueId}",
  "targetLink": "https://sqladmin.googleapis.com/sql/v1beta4/projects/${projectId}/instances/sqlinstance-sample-${uniqueId}",
  "targetProject": "${projectId}",
  "user": "user@example.com"
}

---

GET https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "lifecycleState": "ACTIVE",
  "name": "${projectId}",
  "parent": {
    "id": "${testFolderId}",
    "type": "organization"
  },
  "projectId": "${projectId}",
  "projectNumber": "${projectNumber}"
}

---

GET https://servicenetworking.googleapis.com/v1/services/servicenetworking.googleapis.com/connections?alt=json&network=projects%2F${projectNumber}%2Fglobal%2Fnetworks%2Fcomputenetwork-${uniqueId}&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "connections": [
    {
      "network": "projects/${projectNumber}/global/networks/computenetwork-${uniqueId}",
      "peering": "servicenetworking-googleapis-com",
      "reservedPeeringRanges": [
        "computeaddress-${uniqueId}"
      ],
      "service": "services/servicenetworking.googleapis.com"
    }
  ]
}

---

GET https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "lifecycleState": "ACTIVE",
  "name": "${projectId}",
  "parent": {
    "id": "${testFolderId}",
    "type": "organization"
  },
  "projectId": "${projectId}",
  "projectNumber": "${projectNumber}"
}

---

POST https://compute.googleapis.com/compute/v1/projects/${projectNumber}/global/networks/${networkID}/removePeering?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "name": "servicenetworking-googleapis-com"
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "removePeering",
  "progress": 0,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "RUNNING",
  "targetId": "${networkID}",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "endTime": "2024-04-01T12:34:56.123456Z",
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "removePeering",
  "progress": 100,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "DONE",
  "targetId": "${networkID}",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "address": "10.187.0.0",
  "addressType": "INTERNAL",
  "creationTimestamp": "2024-04-01T12:34:56.123456Z",
  "description": "",
  "id": "000000000000000000000",
  "kind": "compute#address",
  "labelFingerprint": "abcdef0123A=",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "computeaddress-${uniqueId}",
  "network": "https://www.googleapis.com/compute/beta/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "networkTier": "PREMIUM",
  "prefixLength": 16,
  "purpose": "VPC_PEERING",
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "status": "RESERVED"
}

---

DELETE https://compute.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "delete",
  "progress": 0,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "RUNNING",
  "targetId": "6659957269308098086",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "endTime": "2024-04-01T12:34:56.123456Z",
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "delete",
  "progress": 100,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "DONE",
  "targetId": "6659957269308098086",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/addresses/computeaddress-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "autoCreateSubnetworks": false,
  "creationTimestamp": "2024-04-01T12:34:56.123456Z",
  "description": "Test network",
  "id": "000000000000000000000",
  "kind": "compute#network",
  "name": "computenetwork-${uniqueId}",
  "networkFirewallPolicyEnforcementOrder": "AFTER_CLASSIC_FIREWALL",
  "routingConfig": {
    "bgpBestPathSelectionMode": "LEGACY",
    "routingMode": "REGIONAL"
  },
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "selfLinkWithId": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}"
}

---

DELETE https://compute.googleapis.com/compute/v1/projects/${projectId}/global/networks/${networkID}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "delete",
  "progress": 0,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "RUNNING",
  "targetId": "${networkID}",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://compute.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "endTime": "2024-04-01T12:34:56.123456Z",
  "id": "000000000000000000000",
  "insertTime": "2024-04-01T12:34:56.123456Z",
  "kind": "compute#operation",
  "name": "${operationID}",
  "operationType": "delete",
  "progress": 100,
  "selfLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/operations/${operationID}",
  "startTime": "2024-04-01T12:34:56.123456Z",
  "status": "DONE",
  "targetId": "${networkID}",
  "targetLink": "https://www.googleapis.com/compute/v1/projects/${projectId}/global/networks/computenetwork-${uniqueId}",
  "user": "user@example.com"
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "destroyScheduledDuration": "2592000s",
  "labels": {
    "cnrm-test": "true",
    "managed-by-cnrm": "true"
  },
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}",
  "primary": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "createTime": "2024-04-01T12:34:56.123456Z",
    "generateTime": "2024-04-01T12:34:56.123456Z",
    "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1",
    "protectionLevel": "SOFTWARE",
    "state": "ENABLED"
  },
  "purpose": "ENCRYPT_DECRYPT",
  "versionTemplate": {
    "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
    "protectionLevel": "SOFTWARE"
  }
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions?alt=json&prettyPrint=false
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "cryptoKeyVersions": [
    {
      "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
      "createTime": "2024-04-01T12:34:56.123456Z",
      "generateTime": "2024-04-01T12:34:56.123456Z",
      "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1",
      "protectionLevel": "SOFTWARE",
      "state": "ENABLED"
    }
  ],
  "totalSize": 1
}

---

POST https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1:destroy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
  "createTime": "2024-04-01T12:34:56.123456Z",
  "destroyTime": "2024-04-01T12:34:56.123456Z",
  "generateTime": "2024-04-01T12:34:56.123456Z",
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}/cryptoKeys/kmscryptokey-${uniqueId}/cryptoKeyVersions/1",
  "protectionLevel": "SOFTWARE",
  "state": "DESTROY_SCHEDULED"
}

---

GET https://cloudkms.googleapis.com/v1/projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}?alt=json
Content-Type: application/json
User-Agent: Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "createTime": "2024-04-01T12:34:56.123456Z",
  "name": "projects/${projectId}/locations/us-central1/keyRings/kmskeyring-${uniqueId}"
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloud-sql.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:setIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "policy": {
    "bindings": [
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
        ],
        "role": "roles/alloydb.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
        ],
        "role": "roles/appengine.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
        ],
        "role": "roles/artifactregistry.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
        ],
        "role": "roles/cloudbuild.builds.builder"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
        ],
        "role": "roles/cloudbuild.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
        ],
        "role": "roles/cloudkms.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
        ],
        "role": "roles/compute.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
        ],
        "role": "roles/container.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
        ],
        "role": "roles/containerregistry.ServiceAgent"
      },
      {
        "members": [
          "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
          "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
          "serviceAccount:${projectId}@appspot.gserviceaccount.com"
        ],
        "role": "roles/editor"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
        ],
        "role": "roles/firebaserules.system"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
        ],
        "role": "roles/firestore.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
        ],
        "role": "roles/gkehub.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
        ],
        "role": "roles/networkconnectivity.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
          "user:jasonvigil@google.com"
        ],
        "role": "roles/owner"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
        ],
        "role": "roles/pubsub.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
        ],
        "role": "roles/servicenetworking.serviceAgent"
      },
      {
        "members": [
          "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
        ],
        "role": "roles/spanner.serviceAgent"
      }
    ],
    "etag": "abcdef0123A=",
    "version": 1
  },
  "updateMask": "bindings,etag,auditConfigs"
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}

---

POST https://cloudresourcemanager.googleapis.com/v1/projects/${projectId}:getIamPolicy?alt=json&prettyPrint=false
Content-Type: application/json
User-Agent: google-api-go-client/0.5 Terraform/ (+https://www.terraform.io) Terraform-Plugin-SDK/2.10.1 terraform-provider-google-beta/kcc/controller-manager

{
  "options": {
    "requestedPolicyVersion": 3
  }
}

200 OK
Cache-Control: private
Content-Type: application/json; charset=UTF-8
Server: ESF
Vary: Origin
Vary: X-Origin
Vary: Referer
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 0

{
  "bindings": [
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-alloydb.iam.gserviceaccount.com"
      ],
      "role": "roles/alloydb.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-gae-service.iam.gserviceaccount.com"
      ],
      "role": "roles/appengine.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-artifactregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/artifactregistry.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}@cloudbuild.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.builds.builder"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudbuild.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudbuild.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-cloudkms.iam.gserviceaccount.com"
      ],
      "role": "roles/cloudkms.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@compute-system.iam.gserviceaccount.com"
      ],
      "role": "roles/compute.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@container-engine-robot.iam.gserviceaccount.com"
      ],
      "role": "roles/container.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@containerregistry.iam.gserviceaccount.com"
      ],
      "role": "roles/containerregistry.ServiceAgent"
    },
    {
      "members": [
        "serviceAccount:${projectNumber}-compute@developer.gserviceaccount.com",
        "serviceAccount:${projectNumber}@cloudservices.gserviceaccount.com",
        "serviceAccount:${projectId}@appspot.gserviceaccount.com"
      ],
      "role": "roles/editor"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@firebase-rules.iam.gserviceaccount.com"
      ],
      "role": "roles/firebaserules.system"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-firestore.iam.gserviceaccount.com"
      ],
      "role": "roles/firestore.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-gkehub.iam.gserviceaccount.com"
      ],
      "role": "roles/gkehub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-networkconnectivity.iam.gserviceaccount.com"
      ],
      "role": "roles/networkconnectivity.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:cnrm-system@${projectId}.iam.gserviceaccount.com",
        "user:jasonvigil@google.com"
      ],
      "role": "roles/owner"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com"
      ],
      "role": "roles/pubsub.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@service-networking.iam.gserviceaccount.com"
      ],
      "role": "roles/servicenetworking.serviceAgent"
    },
    {
      "members": [
        "serviceAccount:service-${projectNumber}@gcp-sa-spanner.iam.gserviceaccount.com"
      ],
      "role": "roles/spanner.serviceAgent"
    }
  ],
  "etag": "abcdef0123A=",
  "version": 1
}