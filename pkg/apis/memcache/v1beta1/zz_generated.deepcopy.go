//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by main. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMemcacheNodesStatus) DeepCopyInto(out *InstanceMemcacheNodesStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMemcacheNodesStatus.
func (in *InstanceMemcacheNodesStatus) DeepCopy() *InstanceMemcacheNodesStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceMemcacheNodesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceMemcacheParameters) DeepCopyInto(out *InstanceMemcacheParameters) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceMemcacheParameters.
func (in *InstanceMemcacheParameters) DeepCopy() *InstanceMemcacheParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceMemcacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceNodeConfig) DeepCopyInto(out *InstanceNodeConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceNodeConfig.
func (in *InstanceNodeConfig) DeepCopy() *InstanceNodeConfig {
	if in == nil {
		return nil
	}
	out := new(InstanceNodeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcacheInstance) DeepCopyInto(out *MemcacheInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcacheInstance.
func (in *MemcacheInstance) DeepCopy() *MemcacheInstance {
	if in == nil {
		return nil
	}
	out := new(MemcacheInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcacheInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcacheInstanceList) DeepCopyInto(out *MemcacheInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MemcacheInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcacheInstanceList.
func (in *MemcacheInstanceList) DeepCopy() *MemcacheInstanceList {
	if in == nil {
		return nil
	}
	out := new(MemcacheInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcacheInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcacheInstanceSpec) DeepCopyInto(out *MemcacheInstanceSpec) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.MemcacheParameters != nil {
		in, out := &in.MemcacheParameters, &out.MemcacheParameters
		*out = new(InstanceMemcacheParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MemcacheVersion != nil {
		in, out := &in.MemcacheVersion, &out.MemcacheVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	out.NodeConfig = in.NodeConfig
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcacheInstanceSpec.
func (in *MemcacheInstanceSpec) DeepCopy() *MemcacheInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(MemcacheInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcacheInstanceStatus) DeepCopyInto(out *MemcacheInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.MemcacheNodes != nil {
		in, out := &in.MemcacheNodes, &out.MemcacheNodes
		*out = make([]InstanceMemcacheNodesStatus, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcacheInstanceStatus.
func (in *MemcacheInstanceStatus) DeepCopy() *MemcacheInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(MemcacheInstanceStatus)
	in.DeepCopyInto(out)
	return out
}
