// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ComputeAddressSpec struct {
	/* Immutable. The static external IP address represented by this resource. Only
	IPv4 is supported. An address may only be specified for INTERNAL
	address types. The IP address must be inside the specified subnetwork,
	if any. */
	Address string `json:"address,omitempty"`
	/* Immutable. The type of address to reserve. Default value: "EXTERNAL" Possible values: ["INTERNAL", "EXTERNAL"] */
	AddressType string `json:"addressType,omitempty"`
	/* Immutable. An optional description of this resource. */
	Description string `json:"description,omitempty"`
	/* Immutable. The IP Version that will be used by this address. The default value is 'IPV4'. Possible values: ["IPV4", "IPV6"] */
	IpVersion string `json:"ipVersion,omitempty"`
	/* Location represents the geographical location of the ComputeAddress. Specify a region name or "global" for global resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/) */
	Location string `json:"location,omitempty"`
	/* The network in which to reserve the IP range. The IP range must be
	in the RFC1918 space. The network cannot be deleted if there are
	any reserved IP ranges referring to it.

	This should only be set when using an Internal address. */
	NetworkRef v1alpha1.ResourceRef `json:"networkRef,omitempty"`
	/* Immutable. The networking tier used for configuring this address. If this field is not
	specified, it is assumed to be PREMIUM. Possible values: ["PREMIUM", "STANDARD"] */
	NetworkTier string `json:"networkTier,omitempty"`
	/* Immutable. The prefix length of the IP range. If not present, it means the
	address field is a single IP address.

	This field is not applicable to addresses with addressType=EXTERNAL. */
	PrefixLength int `json:"prefixLength,omitempty"`
	/* Immutable. The purpose of this resource, which can be one of the following values:

	* GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, internal load balancers, and similar resources.

	* SHARED_LOADBALANCER_VIP for an address that can be used by multiple internal load balancers.

	* VPC_PEERING for addresses that are reserved for VPC peer networks.

	This should only be set when using an Internal address. Possible values: ["GCE_ENDPOINT", "VPC_PEERING", "SHARED_LOADBALANCER_VIP"] */
	Purpose string `json:"purpose,omitempty"`
	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	ResourceID string `json:"resourceID,omitempty"`
	/* The subnetwork in which to reserve the address. If an IP address is
	specified, it must be within the subnetwork's IP range.  This field
	can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER
	purposes. */
	SubnetworkRef v1alpha1.ResourceRef `json:"subnetworkRef,omitempty"`
}

type ComputeAddressStatus struct {
	/* Conditions represents the latest available observations of the
	   ComputeAddress's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* Creation timestamp in RFC3339 text format. */
	CreationTimestamp string `json:"creationTimestamp,omitempty"`
	/* The fingerprint used for optimistic locking of this resource.  Used
	internally during updates. */
	LabelFingerprint string `json:"labelFingerprint,omitempty"`
	/*  */
	SelfLink string `json:"selfLink,omitempty"`
	/* The URLs of the resources that are using this address. */
	Users []string `json:"users,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeAddress is the Schema for the compute API
// +k8s:openapi-gen=true
type ComputeAddress struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ComputeAddressSpec   `json:"spec,omitempty"`
	Status ComputeAddressStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeAddressList contains a list of ComputeAddress
type ComputeAddressList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Items             []ComputeAddress `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ComputeAddress{}, &ComputeAddressList{})
}
