// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ComputeTargetTCPProxySpec struct {
	/* A reference to the ComputeBackendService resource. */
	BackendServiceRef v1alpha1.ResourceRef `json:"backendServiceRef,omitempty"`
	/* Immutable. An optional description of this resource. */
	Description string `json:"description,omitempty"`
	/* Immutable. This field only applies when the forwarding rule that references
	this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. */
	ProxyBind bool `json:"proxyBind,omitempty"`
	/* Specifies the type of proxy header to append before sending data to
	the backend. Default value: "NONE" Possible values: ["NONE", "PROXY_V1"] */
	ProxyHeader string `json:"proxyHeader,omitempty"`
	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	ResourceID string `json:"resourceID,omitempty"`
}

type ComputeTargetTCPProxyStatus struct {
	/* Conditions represent the latest available observations of the
	   ComputeTargetTCPProxy's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* Creation timestamp in RFC3339 text format. */
	CreationTimestamp string `json:"creationTimestamp,omitempty"`
	/* The unique identifier for the resource. */
	ProxyId int `json:"proxyId,omitempty"`
	/*  */
	SelfLink string `json:"selfLink,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeTargetTCPProxy is the Schema for the compute API
// +k8s:openapi-gen=true
type ComputeTargetTCPProxy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ComputeTargetTCPProxySpec   `json:"spec,omitempty"`
	Status ComputeTargetTCPProxyStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeTargetTCPProxyList contains a list of ComputeTargetTCPProxy
type ComputeTargetTCPProxyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ComputeTargetTCPProxy `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ComputeTargetTCPProxy{}, &ComputeTargetTCPProxyList{})
}
