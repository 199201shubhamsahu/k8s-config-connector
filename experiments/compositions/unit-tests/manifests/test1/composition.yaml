# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: composition.google.com/v1
kind: Composition
metadata:
  name: composition-sample
spec:
  inputAPIGroup: cloudsqls.alice.alice
  expanders:
  - type: jinja2
    name: block1
    template: |
      # gcloud beta services identity create --service=sqladmin.googleapis.com --project=project
      apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
      kind: ServiceIdentity
      metadata:
        name: sqladmin.googleapis.com
        ## TODO(barni@): replace namespace with inherited namespace
        namespace: config-control
      spec:
        projectRef:
          external: {{ context.spec.project }}
  - type: jinja2
    name: block2
    valuesFrom:
    - name: identity
      resourceRef:
        group: serviceusage.cnrm.cloud.google.com
        version: v1beta1
        kind: ServiceIdentity
        name: sqladmin.googleapis.com
      fieldRef:
      - path: ".status.email"
        as: email
    template: |
      {% for region in cloudsqls.spec.regions %}
      ---
      apiVersion: kms.cnrm.cloud.google.com/v1beta1
      kind: KMSKeyRing
      metadata:
        name: kmscryptokeyring-{{ region }}
        ## TODO(barni@): replace namespace with inherited namespace
        namespace: config-control
      spec:
        location: {{ region }}
      ---
      apiVersion: kms.cnrm.cloud.google.com/v1beta1
      kind: KMSCryptoKey
      metadata:
        labels:
          failure-zone: {{ region }}
        name: kmscryptokey-enc-{{ region }}
        ## TODO(barni@): replace namespace with inherited namespace
        namespace: config-control
      spec:
        keyRingRef:
          name: kmscryptokeyring-{{ region }}
          namespace: config-control
        purpose: ENCRYPT_DECRYPT
        versionTemplate:
          algorithm: GOOGLE_SYMMETRIC_ENCRYPTION
          protectionLevel: SOFTWARE
        importOnly: false
      ---
      apiVersion: iam.cnrm.cloud.google.com/v1beta1
      kind: IAMPolicyMember
      metadata:
        name: sql-kms-{{ region }}-policybinding
        namespace: config-control
      spec:
        member: serviceAccount:{{ values.identity.email }}
        role: roles/cloudkms.cryptoKeyEncrypterDecrypter
        resourceRef:
          kind: KMSCryptoKey
          name: kmscryptokey-enc-{{ region }}
          namespace: config-control
      ---
      apiVersion: sql.cnrm.cloud.google.com/v1beta1
      kind: SQLInstance
      metadata:
        annotations:
          argocd.argoproj.io/sync-wave: '5'
          cnrm.cloud.google.com/deletion-policy: abandon
        labels:
          argocd.argoproj.io/instance: obfuscated-value
        name: {{ cloudsqls.spec.name }}-{% if loop.index == 1 %}main{% else %}replica{% endif %}
        namespace: config-control
      spec:
        databaseVersion: POSTGRES_13
        encryptionKMSCryptoKeyRef:
          external: projects/{{ context.spec.project }}/locations/{{ region }}/keyRings/kmscryptokeyring-{{ region }}/cryptoKeys/kmscryptokey-enc-{{ region }}
      {% if loop.index > 1 %}
        masterInstanceRef:
          name: {{ cloudsqls.spec.name }}-main
          namespace: config-control
      {% endif %}
        region: {{ region }}
        settings:
          availabilityType: REGIONAL
          backupConfiguration:
            backupRetentionSettings:
              retainedBackups: 6
            enabled: true
            location: us
          diskSize: 50
          diskType: PD_SSD
          maintenanceWindow:
            day: 7
            hour: 3
          tier: db-custom-8-30720
      {% endfor %}