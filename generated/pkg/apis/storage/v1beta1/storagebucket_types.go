// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type Action struct {
	/* The target Storage Class of objects affected by this Lifecycle Rule. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. */
	StorageClass string `json:"storageClass,omitempty"`
	/* The type of the action of this Lifecycle Rule. Supported values include: Delete and SetStorageClass. */
	Type string `json:"type,omitempty"`
}

type Condition struct {
	/* Minimum age of an object in days to satisfy this condition. */
	Age int `json:"age,omitempty"`
	/* Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition. */
	CreatedBefore string `json:"createdBefore,omitempty"`
	/* Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition. */
	CustomTimeBefore string `json:"customTimeBefore,omitempty"`
	/* Number of days elapsed since the user-specified timestamp set on an object. */
	DaysSinceCustomTime int `json:"daysSinceCustomTime,omitempty"`
	/* Number of days elapsed since the noncurrent timestamp of an object. This
	condition is relevant only for versioned objects. */
	DaysSinceNoncurrentTime int `json:"daysSinceNoncurrentTime,omitempty"`
	/* Storage Class of objects to satisfy this condition. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, DURABLE_REDUCED_AVAILABILITY. */
	MatchesStorageClass []string `json:"matchesStorageClass,omitempty"`
	/* Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition. */
	NoncurrentTimeBefore string `json:"noncurrentTimeBefore,omitempty"`
	/* Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition. */
	NumNewerVersions int `json:"numNewerVersions,omitempty"`
	/* Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: "LIVE", "ARCHIVED", "ANY". */
	WithState string `json:"withState,omitempty"`
}

type Cors struct {
	/* The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses. */
	MaxAgeSeconds int `json:"maxAgeSeconds,omitempty"`
	/* The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method". */
	Method []string `json:"method,omitempty"`
	/* The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin". */
	Origin []string `json:"origin,omitempty"`
	/* The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains. */
	ResponseHeader []string `json:"responseHeader,omitempty"`
}

type Encryption struct {
	/*  */
	KmsKeyRef v1alpha1.ResourceRef `json:"kmsKeyRef,omitempty"`
}

type LifecycleRule struct {
	/* The Lifecycle Rule's action configuration. A single block of this type is supported. */
	Action Action `json:"action,omitempty"`
	/* The Lifecycle Rule's condition configuration. */
	Condition Condition `json:"condition,omitempty"`
}

type Logging struct {
	/* The bucket that will receive log objects. */
	LogBucket string `json:"logBucket,omitempty"`
	/* The object prefix for log objects. If it's not provided, by default Google Cloud Storage sets this to this bucket's name. */
	LogObjectPrefix string `json:"logObjectPrefix,omitempty"`
}

type RetentionPolicy struct {
	/* If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action. */
	IsLocked bool `json:"isLocked,omitempty"`
	/* The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds. */
	RetentionPeriod int `json:"retentionPeriod,omitempty"`
}

type Versioning struct {
	/* While set to true, versioning is fully enabled for this bucket. */
	Enabled bool `json:"enabled,omitempty"`
}

type Website struct {
	/* Behaves as the bucket's directory index where missing objects are treated as potential directories. */
	MainPageSuffix string `json:"mainPageSuffix,omitempty"`
	/* The custom object to return when a requested resource is not found. */
	NotFoundPage string `json:"notFoundPage,omitempty"`
}

type StorageBucketSpec struct {
	/* DEPRECATED â€” Please use the uniform_bucket_level_access as this field has been renamed by Google. Enables Bucket Policy Only access to a bucket. */
	BucketPolicyOnly bool `json:"bucketPolicyOnly,omitempty"`
	/* The bucket's Cross-Origin Resource Sharing (CORS) configuration. */
	Cors []Cors `json:"cors,omitempty"`
	/*  */
	DefaultEventBasedHold bool `json:"defaultEventBasedHold,omitempty"`
	/* The bucket's encryption configuration. */
	Encryption Encryption `json:"encryption,omitempty"`
	/* The bucket's Lifecycle Rules configuration. */
	LifecycleRule []LifecycleRule `json:"lifecycleRule,omitempty"`
	/* Immutable. The Google Cloud Storage location */
	Location string `json:"location,omitempty"`
	/* The bucket's Access & Storage Logs configuration. */
	Logging Logging `json:"logging,omitempty"`
	/* Enables Requester Pays on a storage bucket. */
	RequesterPays bool `json:"requesterPays,omitempty"`
	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	ResourceID string `json:"resourceID,omitempty"`
	/* Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. */
	RetentionPolicy RetentionPolicy `json:"retentionPolicy,omitempty"`
	/* The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. */
	StorageClass string `json:"storageClass,omitempty"`
	/* Enables uniform bucket-level access on a bucket. */
	UniformBucketLevelAccess bool `json:"uniformBucketLevelAccess,omitempty"`
	/* The bucket's Versioning configuration. */
	Versioning Versioning `json:"versioning,omitempty"`
	/* Configuration if the bucket acts as a website. */
	Website Website `json:"website,omitempty"`
}

type StorageBucketStatus struct {
	/* Conditions represents the latest available observations of the
	   StorageBucket's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* The URI of the created resource. */
	SelfLink string `json:"selfLink,omitempty"`
	/* The base URL of the bucket, in the format gs://<bucket-name>. */
	Url string `json:"url,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// StorageBucket is the Schema for the storage API
// +k8s:openapi-gen=true
type StorageBucket struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   StorageBucketSpec   `json:"spec,omitempty"`
	Status StorageBucketStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// StorageBucketList contains a list of StorageBucket
type StorageBucketList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Items             []StorageBucket `json:"items"`
}

func init() {
	SchemeBuilder.Register(&StorageBucket{}, &StorageBucketList{})
}
