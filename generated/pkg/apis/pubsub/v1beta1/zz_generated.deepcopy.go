// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by main. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadLetterPolicy) DeepCopyInto(out *DeadLetterPolicy) {
	*out = *in
	out.DeadLetterTopicRef = in.DeadLetterTopicRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadLetterPolicy.
func (in *DeadLetterPolicy) DeepCopy() *DeadLetterPolicy {
	if in == nil {
		return nil
	}
	out := new(DeadLetterPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpirationPolicy) DeepCopyInto(out *ExpirationPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpirationPolicy.
func (in *ExpirationPolicy) DeepCopy() *ExpirationPolicy {
	if in == nil {
		return nil
	}
	out := new(ExpirationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MessageStoragePolicy) DeepCopyInto(out *MessageStoragePolicy) {
	*out = *in
	if in.AllowedPersistenceRegions != nil {
		in, out := &in.AllowedPersistenceRegions, &out.AllowedPersistenceRegions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MessageStoragePolicy.
func (in *MessageStoragePolicy) DeepCopy() *MessageStoragePolicy {
	if in == nil {
		return nil
	}
	out := new(MessageStoragePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcToken) DeepCopyInto(out *OidcToken) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcToken.
func (in *OidcToken) DeepCopy() *OidcToken {
	if in == nil {
		return nil
	}
	out := new(OidcToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubSubscription) DeepCopyInto(out *PubSubSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubSubscription.
func (in *PubSubSubscription) DeepCopy() *PubSubSubscription {
	if in == nil {
		return nil
	}
	out := new(PubSubSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PubSubSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubSubscriptionList) DeepCopyInto(out *PubSubSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PubSubSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubSubscriptionList.
func (in *PubSubSubscriptionList) DeepCopy() *PubSubSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(PubSubSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PubSubSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubSubscriptionSpec) DeepCopyInto(out *PubSubSubscriptionSpec) {
	*out = *in
	out.DeadLetterPolicy = in.DeadLetterPolicy
	out.ExpirationPolicy = in.ExpirationPolicy
	in.PushConfig.DeepCopyInto(&out.PushConfig)
	out.RetryPolicy = in.RetryPolicy
	out.TopicRef = in.TopicRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubSubscriptionSpec.
func (in *PubSubSubscriptionSpec) DeepCopy() *PubSubSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(PubSubSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubSubscriptionStatus) DeepCopyInto(out *PubSubSubscriptionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubSubscriptionStatus.
func (in *PubSubSubscriptionStatus) DeepCopy() *PubSubSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(PubSubSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubTopic) DeepCopyInto(out *PubSubTopic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubTopic.
func (in *PubSubTopic) DeepCopy() *PubSubTopic {
	if in == nil {
		return nil
	}
	out := new(PubSubTopic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PubSubTopic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubTopicList) DeepCopyInto(out *PubSubTopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PubSubTopic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubTopicList.
func (in *PubSubTopicList) DeepCopy() *PubSubTopicList {
	if in == nil {
		return nil
	}
	out := new(PubSubTopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PubSubTopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubTopicSpec) DeepCopyInto(out *PubSubTopicSpec) {
	*out = *in
	out.KmsKeyRef = in.KmsKeyRef
	in.MessageStoragePolicy.DeepCopyInto(&out.MessageStoragePolicy)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubTopicSpec.
func (in *PubSubTopicSpec) DeepCopy() *PubSubTopicSpec {
	if in == nil {
		return nil
	}
	out := new(PubSubTopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubSubTopicStatus) DeepCopyInto(out *PubSubTopicStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubSubTopicStatus.
func (in *PubSubTopicStatus) DeepCopy() *PubSubTopicStatus {
	if in == nil {
		return nil
	}
	out := new(PubSubTopicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PushConfig) DeepCopyInto(out *PushConfig) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.OidcToken = in.OidcToken
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PushConfig.
func (in *PushConfig) DeepCopy() *PushConfig {
	if in == nil {
		return nil
	}
	out := new(PushConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicy) DeepCopyInto(out *RetryPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicy.
func (in *RetryPolicy) DeepCopy() *RetryPolicy {
	if in == nil {
		return nil
	}
	out := new(RetryPolicy)
	in.DeepCopyInto(out)
	return out
}
