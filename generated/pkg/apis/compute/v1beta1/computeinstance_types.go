// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type AccessConfig struct {
	/*  */
	NatIpRef v1alpha1.ResourceRef `json:"natIpRef,omitempty"`
	/* The networking tier used for configuring this instance. One of PREMIUM or STANDARD. */
	NetworkTier string `json:"networkTier,omitempty"`
	/* The DNS domain name for the public PTR record. */
	PublicPtrDomainName string `json:"publicPtrDomainName,omitempty"`
}

type AliasIpRange struct {
	/* The IP CIDR range represented by this alias IP range. */
	IpCidrRange string `json:"ipCidrRange,omitempty"`
	/* The subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. */
	SubnetworkRangeName string `json:"subnetworkRangeName,omitempty"`
}

type AttachedDisk struct {
	/* Name with which the attached disk is accessible under /dev/disk/by-id/ */
	DeviceName string `json:"deviceName,omitempty"`
	/* A 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set. */
	DiskEncryptionKeyRaw DiskEncryptionKeyRaw `json:"diskEncryptionKeyRaw,omitempty"`
	/* The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource. */
	DiskEncryptionKeySha256 string `json:"diskEncryptionKeySha256,omitempty"`
	/*  */
	KmsKeyRef v1alpha1.ResourceRef `json:"kmsKeyRef,omitempty"`
	/* Read/write mode for the disk. One of "READ_ONLY" or "READ_WRITE". */
	Mode string `json:"mode,omitempty"`
	/*  */
	SourceDiskRef v1alpha1.ResourceRef `json:"sourceDiskRef,omitempty"`
}

type BootDisk struct {
	/* Immutable. Whether the disk will be auto-deleted when the instance is deleted. */
	AutoDelete bool `json:"autoDelete,omitempty"`
	/* Immutable. Name with which attached disk will be accessible under /dev/disk/by-id/ */
	DeviceName string `json:"deviceName,omitempty"`
	/* Immutable. A 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set. */
	DiskEncryptionKeyRaw DiskEncryptionKeyRaw `json:"diskEncryptionKeyRaw,omitempty"`
	/* The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource. */
	DiskEncryptionKeySha256 string `json:"diskEncryptionKeySha256,omitempty"`
	/* Immutable. Parameters with which a disk was created alongside the instance. */
	InitializeParams InitializeParams `json:"initializeParams,omitempty"`
	/*  */
	KmsKeyRef v1alpha1.ResourceRef `json:"kmsKeyRef,omitempty"`
	/* Immutable. Read/write mode for the disk. One of "READ_ONLY" or "READ_WRITE". */
	Mode string `json:"mode,omitempty"`
	/*  */
	SourceDiskRef v1alpha1.ResourceRef `json:"sourceDiskRef,omitempty"`
}

type ComputeinstanceValueFrom struct {
	/* Reference to a value with the given key in the given Secret in the resource's namespace. */
	SecretKeyRef v1alpha1.ResourceRef `json:"secretKeyRef,omitempty"`
}

type ConfidentialInstanceConfig struct {
	/* Defines whether the instance should have confidential compute enabled. */
	EnableConfidentialCompute bool `json:"enableConfidentialCompute,omitempty"`
}

type DiskEncryptionKeyRaw struct {
	/* Value of the field. Cannot be used if 'valueFrom' is specified. */
	Value string `json:"value,omitempty"`
	/* Source for the field's value. Cannot be used if 'value' is specified. */
	ValueFrom ComputeinstanceValueFrom `json:"valueFrom,omitempty"`
}

type GuestAccelerator struct {
	/* Immutable. The number of the guest accelerator cards exposed to this instance. */
	Count int `json:"count,omitempty"`
	/* Immutable. The accelerator type resource exposed to this instance. E.g. nvidia-tesla-k80. */
	Type string `json:"type,omitempty"`
}

type InitializeParams struct {
	/* Immutable. A set of key/value label pairs assigned to the disk. */
	Labels Labels `json:"labels,omitempty"`
	/* Immutable. The size of the image in gigabytes. */
	Size int `json:"size,omitempty"`
	/*  */
	SourceImageRef v1alpha1.ResourceRef `json:"sourceImageRef,omitempty"`
	/* Immutable. The Google Compute Engine disk type. One of pd-standard, pd-ssd or pd-balanced. */
	Type string `json:"type,omitempty"`
}

type Labels struct {
}

type Metadata struct {
	/*  */
	Key string `json:"key,omitempty"`
	/*  */
	Value string `json:"value,omitempty"`
}

type NetworkInterface struct {
	/* Access configurations, i.e. IPs via which this instance can be accessed via the Internet. */
	AccessConfig []AccessConfig `json:"accessConfig,omitempty"`
	/* An array of alias IP ranges for this network interface. */
	AliasIpRange []AliasIpRange `json:"aliasIpRange,omitempty"`
	/* The name of the interface */
	Name string `json:"name,omitempty"`
	/* The private IP address assigned to the instance. */
	NetworkIp string `json:"networkIp,omitempty"`
	/*  */
	NetworkRef v1alpha1.ResourceRef `json:"networkRef,omitempty"`
	/* The project in which the subnetwork belongs. */
	SubnetworkProject string `json:"subnetworkProject,omitempty"`
	/*  */
	SubnetworkRef v1alpha1.ResourceRef `json:"subnetworkRef,omitempty"`
}

type NodeAffinities struct {
	/*  */
	Value Value `json:"value,omitempty"`
}

type Scheduling struct {
	/* Specifies if the instance should be restarted if it was terminated by Compute Engine (not a user). */
	AutomaticRestart bool `json:"automaticRestart,omitempty"`
	/*  */
	MinNodeCpus int `json:"minNodeCpus,omitempty"`
	/*  */
	NodeAffinities []NodeAffinities `json:"nodeAffinities,omitempty"`
	/* Describes maintenance behavior for the instance. One of MIGRATE or TERMINATE, */
	OnHostMaintenance string `json:"onHostMaintenance,omitempty"`
	/* Immutable. Whether the instance is preemptible. */
	Preemptible bool `json:"preemptible,omitempty"`
}

type ScratchDisk struct {
	/* The disk interface used for attaching this disk. One of SCSI or NVME. */
	Interface string `json:"interface,omitempty"`
}

type ServiceAccount struct {
	/* A list of service scopes. */
	Scopes []string `json:"scopes,omitempty"`
	/*  */
	ServiceAccountRef v1alpha1.ResourceRef `json:"serviceAccountRef,omitempty"`
}

type ShieldedInstanceConfig struct {
	/* Whether integrity monitoring is enabled for the instance. */
	EnableIntegrityMonitoring bool `json:"enableIntegrityMonitoring,omitempty"`
	/* Whether secure boot is enabled for the instance. */
	EnableSecureBoot bool `json:"enableSecureBoot,omitempty"`
	/* Whether the instance uses vTPM. */
	EnableVtpm bool `json:"enableVtpm,omitempty"`
}

type Value struct {
}

type ComputeInstanceSpec struct {
	/* List of disks attached to the instance */
	AttachedDisk []AttachedDisk `json:"attachedDisk,omitempty"`
	/* Immutable. The boot disk for the instance. */
	BootDisk BootDisk `json:"bootDisk,omitempty"`
	/* Immutable. Whether sending and receiving of packets with non-matching source or destination IPs is allowed. */
	CanIpForward bool `json:"canIpForward,omitempty"`
	/* Immutable. The Confidential VM config being used by the instance.  on_host_maintenance has to be set to TERMINATE or this will fail to create. */
	ConfidentialInstanceConfig ConfidentialInstanceConfig `json:"confidentialInstanceConfig,omitempty"`
	/* Whether deletion protection is enabled on this instance. */
	DeletionProtection bool `json:"deletionProtection,omitempty"`
	/* Immutable. A brief description of the resource. */
	Description string `json:"description,omitempty"`
	/* Desired status of the instance. Either "RUNNING" or "TERMINATED". */
	DesiredStatus string `json:"desiredStatus,omitempty"`
	/* Whether the instance has virtual displays enabled. */
	EnableDisplay bool `json:"enableDisplay,omitempty"`
	/* Immutable. List of the type and count of accelerator cards attached to the instance. */
	GuestAccelerator []GuestAccelerator `json:"guestAccelerator,omitempty"`
	/* Immutable. A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid. Valid format is a series of labels 1-63 characters long matching the regular expression [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods. The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created. */
	Hostname string `json:"hostname,omitempty"`
	/*  */
	InstanceTemplateRef v1alpha1.ResourceRef `json:"instanceTemplateRef,omitempty"`
	/* The machine type to create. */
	MachineType string `json:"machineType,omitempty"`
	/*  */
	Metadata []Metadata `json:"metadata,omitempty"`
	/* Immutable. Metadata startup scripts made available within the instance. */
	MetadataStartupScript string `json:"metadataStartupScript,omitempty"`
	/* The minimum CPU platform specified for the VM instance. */
	MinCpuPlatform string `json:"minCpuPlatform,omitempty"`
	/* Immutable. The networks attached to the instance. */
	NetworkInterface []NetworkInterface `json:"networkInterface,omitempty"`
	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	ResourceID string `json:"resourceID,omitempty"`
	/*  */
	ResourcePolicies []v1alpha1.ResourceRef `json:"resourcePolicies,omitempty"`
	/* The scheduling strategy being used by the instance. */
	Scheduling Scheduling `json:"scheduling,omitempty"`
	/* Immutable. The scratch disks attached to the instance. */
	ScratchDisk []ScratchDisk `json:"scratchDisk,omitempty"`
	/* The service account to attach to the instance. */
	ServiceAccount ServiceAccount `json:"serviceAccount,omitempty"`
	/* The shielded vm config being used by the instance. */
	ShieldedInstanceConfig ShieldedInstanceConfig `json:"shieldedInstanceConfig,omitempty"`
	/* The list of tags attached to the instance. */
	Tags []string `json:"tags,omitempty"`
	/* Immutable. The zone of the instance. If self_link is provided, this value is ignored. If neither self_link nor zone are provided, the provider zone is used. */
	Zone string `json:"zone,omitempty"`
}

type ComputeInstanceStatus struct {
	/* Conditions represents the latest available observations of the
	   ComputeInstance's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* The CPU platform used by this instance. */
	CpuPlatform string `json:"cpuPlatform,omitempty"`
	/* Current status of the instance. */
	CurrentStatus string `json:"currentStatus,omitempty"`
	/* The server-assigned unique identifier of this instance. */
	InstanceId string `json:"instanceId,omitempty"`
	/* The unique fingerprint of the labels. */
	LabelFingerprint string `json:"labelFingerprint,omitempty"`
	/* The unique fingerprint of the metadata. */
	MetadataFingerprint string `json:"metadataFingerprint,omitempty"`
	/* The URI of the created resource. */
	SelfLink string `json:"selfLink,omitempty"`
	/* The unique fingerprint of the tags. */
	TagsFingerprint string `json:"tagsFingerprint,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeInstance is the Schema for the compute API
// +k8s:openapi-gen=true
type ComputeInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ComputeInstanceSpec   `json:"spec,omitempty"`
	Status ComputeInstanceStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeInstanceList contains a list of ComputeInstance
type ComputeInstanceList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Items             []ComputeInstance `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ComputeInstance{}, &ComputeInstanceList{})
}
