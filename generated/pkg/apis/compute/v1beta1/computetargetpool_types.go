// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Config Connector and manual
//     changes will be clobbered when the file is regenerated.
//
// ----------------------------------------------------------------------------

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ComputetargetpoolHealthChecks struct {
	/*  */
	HttpHealthCheckRef v1alpha1.ResourceRef `json:"httpHealthCheckRef,omitempty"`
}

type ComputeTargetPoolSpec struct {
	/*  */
	BackupTargetPoolRef v1alpha1.ResourceRef `json:"backupTargetPoolRef,omitempty"`
	/* Immutable. Textual description field. */
	Description string `json:"description,omitempty"`
	/* Immutable. Ratio (0 to 1) of failed nodes before using the backup pool (which must also be set). */
	FailoverRatio float64 `json:"failoverRatio,omitempty"`
	/*  */
	HealthChecks ComputetargetpoolHealthChecks `json:"healthChecks,omitempty"`
	/*  */
	Instances []v1alpha1.ResourceRef `json:"instances,omitempty"`
	/* Immutable. Where the target pool resides. Defaults to project region. */
	Region string `json:"region,omitempty"`
	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	ResourceID string `json:"resourceID,omitempty"`
	/* Immutable. How to distribute load. Options are "NONE" (no affinity). "CLIENT_IP" (hash of the source/dest addresses / ports), and "CLIENT_IP_PROTO" also includes the protocol (default "NONE"). */
	SessionAffinity string `json:"sessionAffinity,omitempty"`
}

type ComputeTargetPoolStatus struct {
	/* Conditions represents the latest available observations of the
	   ComputeTargetPool's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	/* The URI of the created resource. */
	SelfLink string `json:"selfLink,omitempty"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeTargetPool is the Schema for the compute API
// +k8s:openapi-gen=true
type ComputeTargetPool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ComputeTargetPoolSpec   `json:"spec,omitempty"`
	Status ComputeTargetPoolStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ComputeTargetPoolList contains a list of ComputeTargetPool
type ComputeTargetPoolList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Items             []ComputeTargetPool `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ComputeTargetPool{}, &ComputeTargetPoolList{})
}
