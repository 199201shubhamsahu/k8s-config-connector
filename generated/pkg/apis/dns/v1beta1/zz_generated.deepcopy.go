// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by main. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternativeNameServerConfig) DeepCopyInto(out *AlternativeNameServerConfig) {
	*out = *in
	if in.TargetNameServers != nil {
		in, out := &in.TargetNameServers, &out.TargetNameServers
		*out = make([]TargetNameServers, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternativeNameServerConfig.
func (in *AlternativeNameServerConfig) DeepCopy() *AlternativeNameServerConfig {
	if in == nil {
		return nil
	}
	out := new(AlternativeNameServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSManagedZone) DeepCopyInto(out *DNSManagedZone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSManagedZone.
func (in *DNSManagedZone) DeepCopy() *DNSManagedZone {
	if in == nil {
		return nil
	}
	out := new(DNSManagedZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSManagedZone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSManagedZoneList) DeepCopyInto(out *DNSManagedZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSManagedZone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSManagedZoneList.
func (in *DNSManagedZoneList) DeepCopy() *DNSManagedZoneList {
	if in == nil {
		return nil
	}
	out := new(DNSManagedZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSManagedZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSManagedZoneSpec) DeepCopyInto(out *DNSManagedZoneSpec) {
	*out = *in
	in.DnssecConfig.DeepCopyInto(&out.DnssecConfig)
	out.ForwardingConfig = in.ForwardingConfig
	out.PeeringConfig = in.PeeringConfig
	out.PrivateVisibilityConfig = in.PrivateVisibilityConfig
	out.ServiceDirectoryConfig = in.ServiceDirectoryConfig
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSManagedZoneSpec.
func (in *DNSManagedZoneSpec) DeepCopy() *DNSManagedZoneSpec {
	if in == nil {
		return nil
	}
	out := new(DNSManagedZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSManagedZoneStatus) DeepCopyInto(out *DNSManagedZoneStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.NameServers != nil {
		in, out := &in.NameServers, &out.NameServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSManagedZoneStatus.
func (in *DNSManagedZoneStatus) DeepCopy() *DNSManagedZoneStatus {
	if in == nil {
		return nil
	}
	out := new(DNSManagedZoneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPolicy) DeepCopyInto(out *DNSPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPolicy.
func (in *DNSPolicy) DeepCopy() *DNSPolicy {
	if in == nil {
		return nil
	}
	out := new(DNSPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPolicyList) DeepCopyInto(out *DNSPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPolicyList.
func (in *DNSPolicyList) DeepCopy() *DNSPolicyList {
	if in == nil {
		return nil
	}
	out := new(DNSPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPolicySpec) DeepCopyInto(out *DNSPolicySpec) {
	*out = *in
	in.AlternativeNameServerConfig.DeepCopyInto(&out.AlternativeNameServerConfig)
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]Networks, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPolicySpec.
func (in *DNSPolicySpec) DeepCopy() *DNSPolicySpec {
	if in == nil {
		return nil
	}
	out := new(DNSPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPolicyStatus) DeepCopyInto(out *DNSPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPolicyStatus.
func (in *DNSPolicyStatus) DeepCopy() *DNSPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(DNSPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSRecordSet) DeepCopyInto(out *DNSRecordSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSRecordSet.
func (in *DNSRecordSet) DeepCopy() *DNSRecordSet {
	if in == nil {
		return nil
	}
	out := new(DNSRecordSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSRecordSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSRecordSetList) DeepCopyInto(out *DNSRecordSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSRecordSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSRecordSetList.
func (in *DNSRecordSetList) DeepCopy() *DNSRecordSetList {
	if in == nil {
		return nil
	}
	out := new(DNSRecordSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSRecordSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSRecordSetSpec) DeepCopyInto(out *DNSRecordSetSpec) {
	*out = *in
	out.ManagedZoneRef = in.ManagedZoneRef
	if in.Rrdatas != nil {
		in, out := &in.Rrdatas, &out.Rrdatas
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSRecordSetSpec.
func (in *DNSRecordSetSpec) DeepCopy() *DNSRecordSetSpec {
	if in == nil {
		return nil
	}
	out := new(DNSRecordSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSRecordSetStatus) DeepCopyInto(out *DNSRecordSetStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSRecordSetStatus.
func (in *DNSRecordSetStatus) DeepCopy() *DNSRecordSetStatus {
	if in == nil {
		return nil
	}
	out := new(DNSRecordSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultKeySpecs) DeepCopyInto(out *DefaultKeySpecs) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultKeySpecs.
func (in *DefaultKeySpecs) DeepCopy() *DefaultKeySpecs {
	if in == nil {
		return nil
	}
	out := new(DefaultKeySpecs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsmanagedzoneNetworks) DeepCopyInto(out *DnsmanagedzoneNetworks) {
	*out = *in
	out.NetworkRef = in.NetworkRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsmanagedzoneNetworks.
func (in *DnsmanagedzoneNetworks) DeepCopy() *DnsmanagedzoneNetworks {
	if in == nil {
		return nil
	}
	out := new(DnsmanagedzoneNetworks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsmanagedzoneTargetNameServers) DeepCopyInto(out *DnsmanagedzoneTargetNameServers) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsmanagedzoneTargetNameServers.
func (in *DnsmanagedzoneTargetNameServers) DeepCopy() *DnsmanagedzoneTargetNameServers {
	if in == nil {
		return nil
	}
	out := new(DnsmanagedzoneTargetNameServers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnssecConfig) DeepCopyInto(out *DnssecConfig) {
	*out = *in
	if in.DefaultKeySpecs != nil {
		in, out := &in.DefaultKeySpecs, &out.DefaultKeySpecs
		*out = make([]DefaultKeySpecs, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnssecConfig.
func (in *DnssecConfig) DeepCopy() *DnssecConfig {
	if in == nil {
		return nil
	}
	out := new(DnssecConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingConfig) DeepCopyInto(out *ForwardingConfig) {
	*out = *in
	out.TargetNameServers = in.TargetNameServers
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingConfig.
func (in *ForwardingConfig) DeepCopy() *ForwardingConfig {
	if in == nil {
		return nil
	}
	out := new(ForwardingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace) DeepCopyInto(out *Namespace) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace.
func (in *Namespace) DeepCopy() *Namespace {
	if in == nil {
		return nil
	}
	out := new(Namespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Networks) DeepCopyInto(out *Networks) {
	*out = *in
	out.NetworkRef = in.NetworkRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Networks.
func (in *Networks) DeepCopy() *Networks {
	if in == nil {
		return nil
	}
	out := new(Networks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeeringConfig) DeepCopyInto(out *PeeringConfig) {
	*out = *in
	out.TargetNetwork = in.TargetNetwork
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeeringConfig.
func (in *PeeringConfig) DeepCopy() *PeeringConfig {
	if in == nil {
		return nil
	}
	out := new(PeeringConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateVisibilityConfig) DeepCopyInto(out *PrivateVisibilityConfig) {
	*out = *in
	out.Networks = in.Networks
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateVisibilityConfig.
func (in *PrivateVisibilityConfig) DeepCopy() *PrivateVisibilityConfig {
	if in == nil {
		return nil
	}
	out := new(PrivateVisibilityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDirectoryConfig) DeepCopyInto(out *ServiceDirectoryConfig) {
	*out = *in
	out.Namespace = in.Namespace
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDirectoryConfig.
func (in *ServiceDirectoryConfig) DeepCopy() *ServiceDirectoryConfig {
	if in == nil {
		return nil
	}
	out := new(ServiceDirectoryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNameServers) DeepCopyInto(out *TargetNameServers) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNameServers.
func (in *TargetNameServers) DeepCopy() *TargetNameServers {
	if in == nil {
		return nil
	}
	out := new(TargetNameServers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetNetwork) DeepCopyInto(out *TargetNetwork) {
	*out = *in
	out.NetworkRef = in.NetworkRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetNetwork.
func (in *TargetNetwork) DeepCopy() *TargetNetwork {
	if in == nil {
		return nil
	}
	out := new(TargetNetwork)
	in.DeepCopyInto(out)
	return out
}
