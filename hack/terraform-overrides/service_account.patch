# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_google_service_account.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_google_service_account.go
index c90a2e98..14e615a7 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_google_service_account.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_google_service_account.go
@@ -163,14 +163,15 @@ func resourceGoogleServiceAccountUpdate(d *schema.ResourceData, meta interface{}
 func resourceGoogleServiceAccountImport(d *schema.ResourceData, meta interface{}) ([]*schema.ResourceData, error) {
 	config := meta.(*Config)
 	if err := parseImportId([]string{
+		"projects/(?P<project>[^/]+)/serviceAccounts/(?P<unique_id>[\\d]+)",
 		"projects/(?P<project>[^/]+)/serviceAccounts/(?P<email>[^/]+)",
 		"(?P<project>[^/]+)/(?P<email>[^/]+)",
 		"(?P<email>[^/]+)"}, d, config); err != nil {
 		return nil, err
 	}

-	// Replace import id for the resource id
-	id, err := replaceVars(d, config, "projects/{{project}}/serviceAccounts/{{email}}")
+	// Replace import id for the resource id, the last portion of the ID can be either the email or unique_id
+	id, err := replaceVars(d, config, "projects/{{project}}/serviceAccounts/{{email}}{{unique_id}}")
 	if err != nil {
 		return nil, fmt.Errorf("Error constructing id: %s", err)
 	}
