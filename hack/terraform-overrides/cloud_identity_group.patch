# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_cloud_identity_group.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_cloud_identity_group.go
index 7d52d1965..360fdadea 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_cloud_identity_group.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_cloud_identity_group.go
@@ -22,6 +22,7 @@ import (
 	"time"

 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
+	"google.golang.org/api/googleapi"
 )

 func resourceCloudIdentityGroup() *schema.Resource {
@@ -289,6 +289,11 @@ func resourceCloudIdentityGroupRead(d *schema.ResourceData, meta interface{}) er

 	res, err := sendRequest(config, "GET", billingProject, url, userAgent, nil)
 	if err != nil {
+		if gerr, ok := err.(*googleapi.Error); ok && gerr.Code == 403 && strings.Contains(gerr.Message, "Permission denied") {
+			// Deleted or uncreated Groups will always return 403 on GET
+			d.SetId("")
+			return nil
+		}
 		return handleNotFoundError(err, d, fmt.Sprintf("CloudIdentityGroup %q", d.Id()))
 	}

